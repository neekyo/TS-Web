{"version":3,"sources":["src/models/Eventing.ts","src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;AEAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AFEA,ACFA,IDEA,ACFA,QDEA,ECFA,GAAA,OAAA,CAAA,YAAA,CAAA;ACEA,AFAA,IEAM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;AAAE,AFAxB,ACMA,ECNwB,EDMxB,ECN4B,EAAE,ADM9B,IDNA,QEAsB;AAAsB,AFA5C,ACMA,ECN4C,GAAG,EAAE,IFAjD,QAAA,GAAA;AEAsB,AFCrB,ACKD,CCNa,CAAb,OFCC,GCKD,GDLC,GAAwC,EAAxC;AECD,AFkBC,ACXA,ICPG,CAAC,MAAL,ADOC,CCPW,EAAZ,CAAe,ADOd,CAAoB,IAApB,EAAmC,CCPpC,EAAyB,YAAA;AACxB,ADMoB,ECNpB,OAAO,ADMa,CCNZ,GAAR,ADMoB,CCNR,EDMQ,IAAA,GCNpB;AACA,AFDA,ACIO,CCLR,CFCC,OCIO,CDJP,CAAA,ICIO,GAAmB,EDJ1B,CAAA,CCI8B,CDJ9B,GAAA,MCI8B,CAAA,GDJ3B,KCIuB,EAAnB,EDJP,EAAsB,QAAtB,EAAwC;AEGzC,AFFE,ACKsC,ICHpC,CAAC,GFFG,GEER,CAAY,IFFI,GEEhB,AFFmB,CEEC,IFFI,IEExB,EFFmB,CAAY,SAAZ,KAA0B,EAA3C;AACA,IAAA,QAAQ,CAAC,IAAT,CAAc,QAAd;AACA,ACKD,EAAA,IAAA,CAAA,EDLM,MAAL,CAAY,ACKb,CAAA,GAAA,GAAA,EDLC,IAAyB,ICKtB,IDLH,ICKD,EAAoB;ADJnB,ACKA,GDTD,QCSQ,KAAK,IAAL,CAAU,QAAV,CAAP;AACA,GAFD;ADFA,EAAA,QAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;AACxB,ACKD,EAAA,IAAA,CAAA,CDLO,QAAQ,ACKf,CAAA,EDLkB,CCKlB,GAAA,CDLuB,MAAL,CAAY,ECK1B,MAAJ,CDLkB,CAAjB,ACKoB;AACpB,IAAA,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;ADJA,ACKA,GAFD,KDHK,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;AACvC;AACA,ACIH,SAAA,IAAA;AAZA,CAAA,EAAA;ADUE,IAAA,QAAQ,CAAC,OAAT,CAAiB,UAAC,QAAD,EAAS;AACzB,ACXU,MDWV,CCXU,CAAA,IAAA,EDWF,CCXE,IAAA;ADYV,KAFD;AAGA,GAVD;;AAWD,SAAA,QAAA;AApBA,CAAA,EAAA;;AAAa,OAAA,CAAA,QAAA,GAAA,QAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["type Callback = () => void;\n\nexport class Eventing {\n\tevents: { [key: string]: Callback[] } = {};\n\n\ton(eventName: string, callback: Callback): void {\n\t\tconst handlers = this.events[eventName] || [];\n\t\thandlers.push(callback);\n\t\tthis.events[eventName] = handlers;\n\t}\n\n\ttrigger(eventName: string): void {\n\t\tconst handlers = this.events[eventName];\n\n\t\tif (!handlers || handlers.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\thandlers.forEach((callback) => {\n\t\t\tcallback();\n\t\t});\n\t}\n}\n","import { Eventing } from './Eventing';\n\nexport interface UserProps {\n\tid?: number;\n\tname?: string;\n\tage?: number;\n}\n\nexport class User {\n\tpublic events: Eventing = new Eventing();\n\n\tconstructor(private data: UserProps) {}\n\n\tget(propName: string): string | number {\n\t\treturn this.data[propName];\n\t}\n\n\tset(update: UserProps): void {\n\t\tObject.assign(this.data, update);\n\t}\n}\n","import { User } from './models/User';\n\nconst user = new User({ name: 'new record', age: 0 });\n\nuser.events.on('change', () => {\n\tconsole.log('change!');\n});\n\nuser.events.trigger('change');\n"]}